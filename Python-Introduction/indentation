Title: Indentation
Section Title: Python Fundamentals
Subsection Title: Python Introduction

The video explains the importance of indentation in Python, which is a significant difference from many other programming languages, including JavaScript. In Python, indentation is used to denote code blocks, and all that matters is the indentation, unlike other languages that use curly braces to indicate blocks of code. The video emphasizes that indentation is crucial in Python and can impact the functionality of the code and its behavior. The instructor demonstrates how indentation works in Python using IPython and Visual Studio Code, including how Python assumes the programmer wants to write code that is part of a conditional block and how it automatically indents four spaces. The video also notes that Python editors usually default to four spaces for indentation, and while Python does not care about the number of spaces used for indentation, it is important to be consistent. The video concludes by emphasizing that indentation is essential in Python and will be used in functions, classes, loops, and other code blocks.


Sure, here is an example of how indentation is used in Python:

```
age = 20

if age >= 18:
    print("You are old enough to vote")
else:
    print("You are too young to vote")

print("Thanks for checking your eligibility to vote!")
```

In the above example, the code block following the `if` statement is indented four spaces. This indentation indicates that the `print` statement belongs to the `if` statement and will only be executed if the condition `age >= 18` is true. The code block following the `else` statement is also indented four spaces and will only be executed if the `if` condition is false.

If we remove the indentation, we will get a syntax error:

```
age = 15

if age >= 18:
print("You are old enough to vote")
else:
print("You are too young to vote")
```

Output:
```
  File "main.py", line 4
    print("You are old enough to vote")
        ^
IndentationError: expected an indented block
```

This error is caused by the fact that Python expects an indented block to follow the `if` and `else` statements. The error message indicates that Python was expecting an indented block but did not find one.

It's also worth noting that the standard convention for Python indentation is to use four spaces. Some editors may default to using two spaces or a different number of spaces, but it's best to follow the standard convention to make your code more readable for others.




