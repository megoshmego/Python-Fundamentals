
Title: Strings Continued
Subsection Title: Python Data Structures
Section Title: Python Introduction

Key Terms/Ideas:
- Strings
- Sequences of characters
- Immutable
- Double quotes, single quotes, and triple quotes
- Multiple line strings
- Doc strings
- F strings
- Formatted strings
- String constructor function
- List
- in operator
- Slices
- Splices
- Concatenate strings
- Multiply strings
- Iterating over strings
- Built-in string methods

Definitions:
- Strings: In Python, strings are sequences of characters, which are immutable and can be defined using double quotes, single quotes, or triple quotes. They are often used for representing text.
- Immutable: In Python, an immutable object cannot be modified once it is created. For example, strings are immutable objects.
- Double quotes, single quotes, and triple quotes: These are the three different ways to define strings in Python.
- Multiple line strings: This is a string that spans multiple lines, and can be defined using triple quotes.
- Doc strings: This is a special type of string that is used for documenting functions or classes in Python.
- F strings: This is a way to format strings in Python, where expressions can be interpolated using curly braces. They can be defined using an 'F' prefix and quotes.
- Formatted strings: Strings that are created using F strings to embed expressions within curly braces to format the string.
- String constructor function: This is a function that takes a non-string object and converts it into a string.
- List: In Python, a list is a collection of items that are ordered and changeable.
- in operator: This is an operator in Python that tests whether a value is a member of a sequence, such as a string or list.
- Slices: This is a way to extract a portion of a string or list, defined by the starting and ending indices.
- Splices: In Python, splicing is the process of modifying a list by inserting or deleting elements at specific positions. However, this operation is not supported for strings.
- Concatenate strings: This is the process of combining two or more strings into one new string.
- Multiply strings: This is the process of repeating a string multiple times using the multiplication operator.
- Iterating over strings: This is the process of looping over each character in a string.
- Built-in string methods: These are pre-defined functions in Python that can be used to perform operations on strings.


Sure! Here are some code examples based on the concepts discussed in the video:

#### F-strings
```
price = 350
quantity = 7
total = price * quantity
print(f"Your total is ${total}")  # output: Your total is $2450
```

#### Turning non-strings into strings with `str()`
```
num = 5.6
num_str = str(num)
print(num_str)  # output: "5.6"

num_list = [3, 4, 5]
num_list_str = str(num_list)
print(num_list_str)  # output: "[3, 4, 5]"
```

#### Using `in` operator on strings and lists
```
price = "$56.99"
print("$" in price)  # output: True
print("0" in price)  # output: False

num_list = [3, 4, 5]
print(3 in num_list)  # output: True
print(6 in num_list)  # output: False
```

#### Slicing strings
```
msg = "This is a secret message"
print(msg[5:])   # output: "is a secret message"
print(msg[:5])   # output: "This "
print(msg[0:5])  # output: "This "
print(msg[::2])  # output: "Ti sase eae"

# you can also loop over a string character by character
for char in msg:
    print(char)  # output: prints each character of the string on a new line
```

Note that some of these code examples also use concepts from previous videos in the same series.

