





Certainly! Here's an example code for training a simple feedforward neural network using Keras library in Python:

```
import numpy as np
from keras.models import Sequential
from keras.layers import Dense

# Define the dataset
X = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y = np.array([[0], [1], [1], [0]])

# Define the model architecture
model = Sequential()
model.add(Dense(4, input_dim=2, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

# Compile the model
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

# Train the model
model.fit(X, y, epochs=1000, batch_size=4, verbose=0)

# Test the model
print(model.predict(X))
```

This code defines a simple feedforward neural network with one hidden layer and trains it to learn the XOR function. The model takes in two inputs and produces a single output, which is binary. The `Dense` function is used to define the layers of the model, and the `compile` function is used to configure the training process. Finally, the `fit` function is used to train the model on the given data.

You can try running this code and experimenting with the parameters to see how they affect the performance of the model. Good luck with your deep learning AI SWE career!